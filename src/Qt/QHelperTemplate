#ifndef _$(BaseMacro)_H
#define _$(BaseMacro)_H

#include <$(QObjectName)>
#include <QHash>


class $(className) : public QObject{
	Q_OBJECT
public:
	~$(className)(){instances()->remove(m_obj);}
	static $(className)* getInstance($(QObjectName)* obj){
		if (!instances()->contains(obj)){
			(*instances())[obj] = new $(className)(obj);
		}
		return (*instances())[obj];
	}
private:
    $(className)($(QObjectName)* obj) :QObject(obj), m_obj(obj){ 
        Q_ASSERT(m_obj);
        // code here
    }
	static QHash<$(QObjectName)*, $(className)*>* instances(){
		static QHash<$(QObjectName)*, $(className)*> s_instances;
		return &s_instances;
	}
private:
	$(QObjectName)*	m_obj;
};

#define $(BaseMacro)(obj)  $(className)::getInstance(obj)

#endif // _$(BaseMacro)
